{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red250\green246\blue151;
\red106\green62\blue181;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c98431\c96471\c65490\c49804;
\cssrgb\c49412\c34118\c76078;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww20380\viewh17180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs48 \cf0 Clarifai Frontend Coding Challenge - Elvis Guillen\

\b0\fs24 \

\fs26 This repo contains the source code and documentation powering my static Clarifai client-side application for the coding challenge portion of my interview.\

\fs24 \

\b\fs36 Getting Started
\b0\fs24 \
\

\b\fs28 Install Prerequisites
\b0 \

\fs26 \
* Node (I recommend using v8.2.0 or higher)\
* [Gatsby CLI](https://www.gatsbyjs.org/docs/) -  npm install --global gatsby-cli \
\

\b\fs28 Run Locally
\b0 \

\fs26 \
cd clarifai-react\
npm install\
gatsby develop\
\
Site will run locally on localhost:8000\

\fs24 \

\b\fs28 Objective\
\pard\pardeftab720\sl400\partightenfactor0

\b0\fs24 \cf0 \
\pard\pardeftab720\sl300\sa260\partightenfactor0

\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
Create a client-side browser application that interacts with the\'a0\cb4 Clarifai\cb3 \'a0API and does the following:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl300\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Allows a user to send an image to the\'a0{\field{\*\fldinst{HYPERLINK "https://developer.clarifai.com/guide/predict#predict"}}{\fldrslt \cf5 \ul \ulc5 Predict}}\'a0service, using the "Face Detection" model\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Displays the number of faces detected\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Uses the returned bounding boxes (if any) to draw a box around each face in the uploaded image\
\pard\tx720\pardeftab720\sl300\partightenfactor0
\cf2 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 The app supports drag and drop functionality to upload images locally, then pre-processes them to base64 for the AI to infer and render bounding boxes and faces detected. 
\fs24 \
\

\b\fs28 Tools Used\

\b0\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs26 \cf0 React
\b0  - Best framework for state based layouts, also part of Clarifai\'92s workflow.\

\b Bootstrap
\b0  - Easy prototyping with class based components for responsiveness.\

\b GatsbyJS
\b0  - Static site generator that is focused on React and provides a PWA based framework using Webpack and GraphQL. Simple to implement SASS and offline functionality.\

\b SASS
\b0  - Favorite CSS preprocessor, I take advantage of variables, nesting, and loopable styles for staggering css.\

\b GSAP & React Transition Group
\b0  - Animation frameworks for interactions between intentions.\

\b React Dropzone
\b0  - Component library that implements a file upload, drag and drop interface.\

\b ESLint
\b0  - Javascript Linter used to maintain code quality, I use Airbnb\'92s style guide with minor modifications. 
\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b\fs28 \cf0 Edge Cases\

\b0\fs26 \
There were a few issues I kept in mind while creating this:\
\
- Percentage based bounding boxes for a fluid layout\
- Image sizes with a max-height between vertical and horizontal images\
- Correct handling when the AI returns 0 faces.\
- Grammatical conditions when it tells you how many faces it sees.
\fs24 \

\fs26 \

\b\fs28 Roadmap and Future Features
\b0 \

\fs26 \
- Currently only uses the Face Detection Model, would love to add a dropdown to choose between different models. \
- Cutting out the bounding box region from the image using canvas and rendering them in the sidebar, similar to the example on the documentation site: \
  https://clarifai.com/models/face-detection-image-recognition-model-a403429f2ddf4b49b307e318f00e528b-detection#documentation\
- Being able to train a new model with the application.\
\
}